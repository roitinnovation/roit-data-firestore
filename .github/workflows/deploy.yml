name: Versioning & deploy
on:
    pull_request_target:       
        branches:
            - master
        types:
            - closed
        
jobs:
    version:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        outputs:
          NEW_TAG: ${{ steps.version.outputs.version }}
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              fetch-depth: 0

          - name: config user
            run: |
                git config user.email "devops@roit.com.br"
                git config user.name "Squad DevOps"

          - name: Version
            uses: paulhatch/semantic-version@v5.3.0
            id: version
            with:
              tag_prefix: "v"
              major_pattern: "(MAJOR)"
              minor_pattern: "(MINOR)"

          - uses: jossef/action-set-json-field@v2.1
            with:
                file: package.json
                field: version
                value: ${{ steps.version.outputs.version }}
         
          - name: updated package & add tag
            run: |
              echo "$NEW_TAG"
              git add package.json
              git commit -m "chore(update-package): update version in package to $NEW_TAG"
              git push origin master
              git tag -a $NEW_TAG -m "new version $NEW_TAG"
              git push origin $NEW_TAG
            env:
              NEW_TAG: v${{ steps.version.outputs.version }}
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              NEW_TAG: v${{ steps.version.outputs.version }}
            with:
              tag_name: ${{ env.NEW_TAG }}
              release_name: ${{ env.NEW_TAG }}
              body: |
                release create from actions
    build:
      needs: version
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            ref: v${{ needs.version.outputs.NEW_TAG }}
        - run: jq '.version' package.json
        - uses: actions/setup-node@v3
          with:
            node-version: '20.x'
            registry-url: 'https://registry.npmjs.org'
        - run: npm ci
        - run: npm run build
        - run: npm publish
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}